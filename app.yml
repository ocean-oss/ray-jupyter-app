---
ocean:
  version: "1"
steps:
  - engines:
      - name: ray-jupyter
        vars:
          - name: ray_head_host
            value: "{{ engines.ray-jupyter.deployment.nodes.main.private_ip }}"
          - name: ray_head_port
            value: reserve_port()
          - name: ray_dashboard_port
            value: reserve_port()
          - name: ray_node_manager_port
            value: reserve_port()
          - name: ray_object_manager_port
            value: reserve_port()
          - name: gcs_server_port
            value: reserve_port()
          - name: jupyter_port
            value: reserve_port()
          - name: jupyter_token
            value: generate_uuid()
        orchestrator:
          type: Orchestrator::MainWithWorkers
          deploy_to_main: true
          deploy_to_workers: false
          snapshot:
            registry:
              name: docker_hub
            image:
              name: getocean/ray-notebook
            name: latest
          container:
            user: root
            workdir: /work
            mounts:
              engine: /etc/ocean
              data_stores: "{{ engines.ray-jupyter.orchestrator.container.workdir }}"
              ssh: "/home/{{ workspace.user.name }}/.ssh"
            nodes:
              main:
                command: "{{ engines.ray-jupyter.orchestrator.container.mounts.engine }}/startup.sh"
                env_vars:
                  - name: JUPYTER_ENABLE_LAB
                    value: yes
                  - name: NB_UID
                    value: "{{ workspace.user.uid }}"
                  - name: NB_GID
                    value: "{{ workspace.user.gid }}"
                  - name: CHOWN_HOME
                    value: yes
                  - name: GRANT_SUDO
                    value: yes
                  - name: RESTARTABLE
                    value: yes
                  - name: RAY_ADDRESS
                    value: "{{ engines.ray-jupyter.vars.ray_head_host }}:{{ engines.ray-jupyter.vars.ray_head_port }}"
        ui:
          buttons:
            - node_target: main
              label: Ray Dashboard
              url: "http://{{ engines.ray-jupyter.ui.buttons.self.node.public_ip }}:{{ engines.ray-jupyter.vars.ray_dashboard_port }}"
            - node_target: main
              label: Jupyter Notebook
              url: "http://{{ engines.ray-jupyter.ui.buttons.self.node.public_ip }}:{{ engines.ray-jupyter.vars.jupyter_port }}?token={{ engines.ray-jupyter.vars.jupyter_token }}"
  - engines:
      - name: ray-worker
        vars:
          - name: ray_node_manager_port
            value: reserve_port()
          - name: ray_object_manager_port
            value: reserve_port()
          - name: gcs_server_port
            value: reserve_port()
        orchestrator:
          type: Orchestrator::MainWithWorkers
          deploy_to_main: false
          deploy_to_workers: true
          snapshot:
            registry:
              name: docker_hub
            image:
              name: getocean/ray-notebook
            name: latest
          container:
            user: root
            workdir: /work
            mounts:
              engine: /etc/ocean
              data_stores: "{{ engines.ray-worker.orchestrator.container.workdir }}"
              ssh: "/home/{{ workspace.user.name }}/.ssh"
            nodes:
              worker:
                command: "{{ engines.ray-worker.orchestrator.container.mounts.engine }}/startup.sh"
                env_vars:
                  - name: NB_UID
                    value: "{{ workspace.user.uid }}"
                  - name: NB_GID
                    value: "{{ workspace.user.gid }}"
                  - name: CHOWN_HOME
                    value: yes